The ``1-my_list.py`` module
======================

Using ``MyList``
-------------------

First import
``MyList`` from the ``1-my_list.py`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

Testing with one list.

    >>> my_list = MyList([1, 5, 4])
    >>> my_list.print_sorted()
    [1, 4, 5]

Testing with empty list.

    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

Testing with string.

    >>> my_list = MyList("hello")
    >>> my_list.print_sorted()
    ['e', 'h', 'l', 'l', 'o']

Testing with char.

    >>> my_list = MyList("h")
    >>> my_list.print_sorted()
    ['h']

Testing error cases

    >>> my_list = MyList(1)
    Traceback (most recent call last):
    TypeError: 'int' object is not iterable

    >>> my_list = MyList(float('nan'))
    Traceback (most recent call last):
    TypeError: 'float' object is not iterable

    >>> my_list = MyList([1, 5, 4, 'a'])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: unorderable types: str() < int()

    >>> my_list = MyList(float('inf'))
    Traceback (most recent call last):
    TypeError: 'float' object is not iterable

    >>> my_list = MyList(float('nan'))
    Traceback (most recent call last):
    TypeError: 'float' object is not iterable

    >>> my_list = MyList(float(7.9))
    Traceback (most recent call last):
    TypeError: 'float' object is not iterable
